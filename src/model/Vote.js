/**
 * CureDAO Unified Health API
 * A community-owned platform for crowdsourced clinical research
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Vote model module.
 * @module model/Vote
 * @version 0.0.1
 */
class Vote {
    /**
     * Constructs a new <code>Vote</code>.
     * @alias module:model/Vote
     * @param causeVariableId {Number} Cause variable id
     * @param clientId {String} Your CureDAO client id can be obtained by creating an app at https://builder.curedao.org
     * @param effectVariableId {Number} Effect variable id
     * @param userId {Number} ID of User
     * @param value {module:model/Vote.ValueEnum} Vote down for implausible/not-useful or up for plausible/useful. Vote none to delete a previous vote.
     */
    constructor(causeVariableId, clientId, effectVariableId, userId, value) { 
        
        Vote.initialize(this, causeVariableId, clientId, effectVariableId, userId, value);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, causeVariableId, clientId, effectVariableId, userId, value) { 
        obj['causeVariableId'] = causeVariableId;
        obj['clientId'] = clientId;
        obj['effectVariableId'] = effectVariableId;
        obj['userId'] = userId;
        obj['value'] = value;
    }

    /**
     * Constructs a <code>Vote</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Vote} obj Optional instance to populate.
     * @return {module:model/Vote} The populated <code>Vote</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Vote();

            if (data.hasOwnProperty('causeVariableId')) {
                obj['causeVariableId'] = ApiClient.convertToType(data['causeVariableId'], 'Number');
            }
            if (data.hasOwnProperty('clientId')) {
                obj['clientId'] = ApiClient.convertToType(data['clientId'], 'String');
            }
            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'String');
            }
            if (data.hasOwnProperty('effectVariableId')) {
                obj['effectVariableId'] = ApiClient.convertToType(data['effectVariableId'], 'Number');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('updatedAt')) {
                obj['updatedAt'] = ApiClient.convertToType(data['updatedAt'], 'String');
            }
            if (data.hasOwnProperty('userId')) {
                obj['userId'] = ApiClient.convertToType(data['userId'], 'Number');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }


}

/**
 * Cause variable id
 * @member {Number} causeVariableId
 */
Vote.prototype['causeVariableId'] = undefined;

/**
 * Your CureDAO client id can be obtained by creating an app at https://builder.curedao.org
 * @member {String} clientId
 */
Vote.prototype['clientId'] = undefined;

/**
 * When the record was first created. Use UTC ISO 8601 YYYY-MM-DDThh:mm:ss datetime format
 * @member {String} createdAt
 */
Vote.prototype['createdAt'] = undefined;

/**
 * Effect variable id
 * @member {Number} effectVariableId
 */
Vote.prototype['effectVariableId'] = undefined;

/**
 * id
 * @member {Number} id
 */
Vote.prototype['id'] = undefined;

/**
 * When the record in the database was last updated. Use UTC ISO 8601 YYYY-MM-DDThh:mm:ss datetime format
 * @member {String} updatedAt
 */
Vote.prototype['updatedAt'] = undefined;

/**
 * ID of User
 * @member {Number} userId
 */
Vote.prototype['userId'] = undefined;

/**
 * Vote down for implausible/not-useful or up for plausible/useful. Vote none to delete a previous vote.
 * @member {module:model/Vote.ValueEnum} value
 */
Vote.prototype['value'] = undefined;

/**
 * Your CureDAO client id can be obtained by creating an app at https://builder.curedao.org
 * @member {module:model/Vote.TypeEnum} type
 */
Vote.prototype['type'] = undefined;





/**
 * Allowed values for the <code>value</code> property.
 * @enum {String}
 * @readonly
 */
Vote['ValueEnum'] = {

    /**
     * value: "up"
     * @const
     */
    "up": "up",

    /**
     * value: "down"
     * @const
     */
    "down": "down",

    /**
     * value: "none"
     * @const
     */
    "none": "none"
};


/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
Vote['TypeEnum'] = {

    /**
     * value: "causality"
     * @const
     */
    "causality": "causality",

    /**
     * value: "usefulness"
     * @const
     */
    "usefulness": "usefulness"
};



export default Vote;

