/**
 * CureDAO Unified Health API
 * A community-owned platform for crowdsourced clinical research
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Pair model module.
 * @module model/Pair
 * @version 0.0.1
 */
class Pair {
    /**
     * Constructs a new <code>Pair</code>.
     * @alias module:model/Pair
     * @param causeMeasurement {Number} Ex: 101341.66666667
     * @param causeMeasurementValue {Number} Ex: 101341.66666667
     * @param causeVariableUnitAbbreviatedName {String} Ex: mg
     * @param effectMeasurement {Number} Ex: 7.98
     * @param effectMeasurementValue {Number} Ex: 7.98
     * @param effectVariableUnitAbbreviatedName {String} Ex: %
     * @param timestamp {Number} Ex: 1464937200
     */
    constructor(causeMeasurement, causeMeasurementValue, causeVariableUnitAbbreviatedName, effectMeasurement, effectMeasurementValue, effectVariableUnitAbbreviatedName, timestamp) {

        Pair.initialize(this, causeMeasurement, causeMeasurementValue, causeVariableUnitAbbreviatedName, effectMeasurement, effectMeasurementValue, effectVariableUnitAbbreviatedName, timestamp);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, causeMeasurement, causeMeasurementValue, causeVariableUnitAbbreviatedName, effectMeasurement, effectMeasurementValue, effectVariableUnitAbbreviatedName, timestamp) {
        obj['causeMeasurement'] = causeMeasurement;
        obj['causeMeasurementValue'] = causeMeasurementValue;
        obj['causeVariableUnitAbbreviatedName'] = causeVariableUnitAbbreviatedName;
        obj['effectMeasurement'] = effectMeasurement;
        obj['effectMeasurementValue'] = effectMeasurementValue;
        obj['effectVariableUnitAbbreviatedName'] = effectVariableUnitAbbreviatedName;
        obj['timestamp'] = timestamp;
    }

    /**
     * Constructs a <code>Pair</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Pair} obj Optional instance to populate.
     * @return {module:model/Pair} The populated <code>Pair</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Pair();

            if (data.hasOwnProperty('causeMeasurement')) {
                obj['causeMeasurement'] = ApiClient.convertToType(data['causeMeasurement'], 'Number');
            }
            if (data.hasOwnProperty('causeMeasurementValue')) {
                obj['causeMeasurementValue'] = ApiClient.convertToType(data['causeMeasurementValue'], 'Number');
            }
            if (data.hasOwnProperty('causeVariableUnitAbbreviatedName')) {
                obj['causeVariableUnitAbbreviatedName'] = ApiClient.convertToType(data['causeVariableUnitAbbreviatedName'], 'String');
            }
            if (data.hasOwnProperty('effectMeasurement')) {
                obj['effectMeasurement'] = ApiClient.convertToType(data['effectMeasurement'], 'Number');
            }
            if (data.hasOwnProperty('effectMeasurementValue')) {
                obj['effectMeasurementValue'] = ApiClient.convertToType(data['effectMeasurementValue'], 'Number');
            }
            if (data.hasOwnProperty('effectVariableUnitAbbreviatedName')) {
                obj['effectVariableUnitAbbreviatedName'] = ApiClient.convertToType(data['effectVariableUnitAbbreviatedName'], 'String');
            }
            if (data.hasOwnProperty('eventAt')) {
                obj['eventAt'] = ApiClient.convertToType(data['eventAt'], 'String');
            }
            if (data.hasOwnProperty('eventAtUnixTime')) {
                obj['eventAtUnixTime'] = ApiClient.convertToType(data['eventAtUnixTime'], 'Number');
            }
            if (data.hasOwnProperty('startTimeString')) {
                obj['startTimeString'] = ApiClient.convertToType(data['startTimeString'], 'String');
            }
            if (data.hasOwnProperty('timestamp')) {
                obj['timestamp'] = ApiClient.convertToType(data['timestamp'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * Ex: 101341.66666667
 * @member {Number} causeMeasurement
 */
Pair.prototype['causeMeasurement'] = undefined;

/**
 * Ex: 101341.66666667
 * @member {Number} causeMeasurementValue
 */
Pair.prototype['causeMeasurementValue'] = undefined;

/**
 * Ex: mg
 * @member {String} causeVariableUnitAbbreviatedName
 */
Pair.prototype['causeVariableUnitAbbreviatedName'] = undefined;

/**
 * Ex: 7.98
 * @member {Number} effectMeasurement
 */
Pair.prototype['effectMeasurement'] = undefined;

/**
 * Ex: 7.98
 * @member {Number} effectMeasurementValue
 */
Pair.prototype['effectMeasurementValue'] = undefined;

/**
 * Ex: %
 * @member {String} effectVariableUnitAbbreviatedName
 */
Pair.prototype['effectVariableUnitAbbreviatedName'] = undefined;

/**
 * Ex: 2015-08-06 15:49:02 UTC ISO 8601 YYYY-MM-DDThh:mm:ss
 * @member {String} eventAt
 */
Pair.prototype['eventAt'] = undefined;

/**
 * Ex: 1438876142
 * @member {Number} eventAtUnixTime
 */
Pair.prototype['eventAtUnixTime'] = undefined;

/**
 * Ex: 2015-08-06 15:49:02 UTC ISO 8601 YYYY-MM-DDThh:mm:ss
 * @member {String} startTimeString
 */
Pair.prototype['startTimeString'] = undefined;

/**
 * Ex: 1464937200
 * @member {Number} timestamp
 */
Pair.prototype['timestamp'] = undefined;






export default Pair;

