/**
 * CureDAO Unified Health API
 * A community-owned platform for crowdsourced clinical research
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The StudyVotes model module.
 * @module model/StudyVotes
 * @version 0.0.1
 */
class StudyVotes {
    /**
     * Constructs a new <code>StudyVotes</code>.
     * @alias module:model/StudyVotes
     * @param averageVote {Number} Average of all user votes with 1 representing an up-vote and 0 representing a down-vote. Ex: 0.9855
     * @param userVote {Number} 1 if the current user has up-voted the study and 0 if they down-voted it. Null means no vote. Ex: 1 or 0 or null
     */
    constructor(averageVote, userVote) {

        StudyVotes.initialize(this, averageVote, userVote);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, averageVote, userVote) {
        obj['averageVote'] = averageVote;
        obj['userVote'] = userVote;
    }

    /**
     * Constructs a <code>StudyVotes</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StudyVotes} obj Optional instance to populate.
     * @return {module:model/StudyVotes} The populated <code>StudyVotes</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StudyVotes();

            if (data.hasOwnProperty('averageVote')) {
                obj['averageVote'] = ApiClient.convertToType(data['averageVote'], 'Number');
            }
            if (data.hasOwnProperty('userVote')) {
                obj['userVote'] = ApiClient.convertToType(data['userVote'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * Average of all user votes with 1 representing an up-vote and 0 representing a down-vote. Ex: 0.9855
 * @member {Number} averageVote
 */
StudyVotes.prototype['averageVote'] = undefined;

/**
 * 1 if the current user has up-voted the study and 0 if they down-voted it. Null means no vote. Ex: 1 or 0 or null
 * @member {Number} userVote
 */
StudyVotes.prototype['userVote'] = undefined;






export default StudyVotes;

