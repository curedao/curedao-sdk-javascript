/**
 * CureDAO Unified Health API
 * A community-owned platform for crowdsourced clinical research
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Button from './Button';

/**
 * The ExplanationStartTracking model module.
 * @module model/ExplanationStartTracking
 * @version 0.0.1
 */
class ExplanationStartTracking {
    /**
     * Constructs a new <code>ExplanationStartTracking</code>.
     * @alias module:model/ExplanationStartTracking
     * @param button {module:model/Button}
     * @param description {String} Ex: The more data I have the more accurate your results will be so track regularly!
     * @param title {String} Ex: Improve Accuracy
     */
    constructor(button, description, title) {

        ExplanationStartTracking.initialize(this, button, description, title);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, button, description, title) {
        obj['button'] = button;
        obj['description'] = description;
        obj['title'] = title;
    }

    /**
     * Constructs a <code>ExplanationStartTracking</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExplanationStartTracking} obj Optional instance to populate.
     * @return {module:model/ExplanationStartTracking} The populated <code>ExplanationStartTracking</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExplanationStartTracking();

            if (data.hasOwnProperty('button')) {
                obj['button'] = Button.constructFromObject(data['button']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/Button} button
 */
ExplanationStartTracking.prototype['button'] = undefined;

/**
 * Ex: The more data I have the more accurate your results will be so track regularly!
 * @member {String} description
 */
ExplanationStartTracking.prototype['description'] = undefined;

/**
 * Ex: Improve Accuracy
 * @member {String} title
 */
ExplanationStartTracking.prototype['title'] = undefined;






export default ExplanationStartTracking;

